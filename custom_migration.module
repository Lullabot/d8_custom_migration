<?php

/**
 * @file
 * Contains custom_migration.module.
 */

use Drupal\migrate\Row;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\migrate\Entity\MigrationInterface;

/**
 * Implementation of hook_migrate_prepare_row().
 */
function custom_migration_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {

  // Most of the code is broken out into separate files to make it easier to see
  // what is needed for each individual change.

  // Comment out anything not needed, or add more.

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_filter');
  custom_migration_filter($row, $source, $migration);

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_block');
  custom_migration_block($row, $source, $migration);

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_node_reference');
  custom_migration_node_reference($row, $source, $migration);

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_address');
  custom_migration_address($row, $source, $migration);

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_link');
  custom_migration_link($row, $source, $migration);

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_geofield');
  custom_migration_geofield($row, $source, $migration);

  \Drupal::moduleHandler()->loadInclude('custom_migration', 'inc', '/includes/d7_geolocation');
  custom_migration_geolocation($row, $source, $migration);

  // Skip fields that don't work or will not be needed.
  $skip = array(
    'field_view',
  );
  if ($migration->id() == 'd7_field') {
    if (in_array($row->getSourceProperty('field_name'), $skip)) {
      return FALSE;
    }
  }
  if ($migration->id() == 'd7_field_instance') {
    if (in_array($row->getSourceProperty('field_name'), $skip)) {
      return FALSE;
    }
  }

  if ($migration->id() == 'd7_field_formatter_settings') {

    // Skip broken formatters.
    // This is a place to skip or change formatters that are creating problems.

    // Don't think token formatters work any more.
    if ($row->getSourceProperty('view_mode') == 'token') {
      return FALSE;
    }
    // Uncomment to debug
    //drush_print_r($row);
  }
}
